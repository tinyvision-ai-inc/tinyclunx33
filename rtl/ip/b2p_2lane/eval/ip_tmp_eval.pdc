#-------------------------------------------------------------------------------
# GENERAL NOTES
# This post-synthesis constraint file is generated in LDC format and is 
# compatible with Radiant SW.
# Note that "IP_INST" is a reserved keyword. This should be used as prefix of 
# the variables used in the file.
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# CLOCKS
#----- 

set IP_INST_BYTECLK_PERIOD [expr {double(round(1000000/$IP_INST_BYTE_CLK_FREQ))/1000}]
set IP_INST_PIXELCLK_PERIOD [expr {double(round(1000000/$IP_INST_PIX_CLK_FREQ))/1000}]  

if {$IP_INST_AXI4_RX=="ON"} {
  create_clock -name {axis_sclk_i} -period $IP_INST_BYTECLK_PERIOD [get_ports axis_sclk_i]
}
if {$IP_INST_AXI4_RX=="OFF"} {
  create_clock -name {clk_byte_i} -period $IP_INST_BYTECLK_PERIOD [get_ports clk_byte_i]
}
if {$IP_INST_AXI4_TX=="ON"} {
  create_clock -name {axis_mclk_i} -period $IP_INST_PIXELCLK_PERIOD [get_ports axis_mclk_i]
}
if {$IP_INST_AXI4_TX=="OFF"} {
  create_clock -name {clk_pixel_i} -period $IP_INST_PIXELCLK_PERIOD [get_ports clk_pixel_i]
}

# NOTE:  The byte-to-pixel IP treats the byte clock and the pixel clock as 
#        asynchronous.
#        Use "set_clock_groups -asynchronous" constraint only if the two 
#        clocks are asynchronous even for other logic outside the 
#        byte-to-pixel IP.
if {$IP_INST_AXI4_RX=="OFF"} {
  if {$IP_INST_AXI4_TX=="OFF"} {
    set_clock_groups -group [get_clocks clk_byte_i]  -group [get_clocks clk_pixel_i] -asynchronous
  } else {
    set_clock_groups -group [get_clocks clk_byte_i]  -group [get_clocks axis_mclk_i] -asynchronous
  }
} else {
  if {$IP_INST_AXI4_TX=="OFF"} {
    set_clock_groups -group [get_clocks axis_sclk_i]  -group [get_clocks clk_pixel_i] -asynchronous
  } else {
    set_clock_groups -group [get_clocks axis_sclk_i]  -group [get_clocks axis_mclk_i] -asynchronous
  }
}


#-------------------------------------------------------------------------------
# Timing Constraints
#----- 

# multicycle path from wc_pix_sync* to pixcnt_c* and pix_out_cntr* #
set_multicycle_path -setup -from [get_pins -hierarchical {wc_pix_sync*/Q}] -to [get_nets -hierarchical {pix_out_cntr*}] 7
set_multicycle_path -hold  -from [get_pins -hierarchical {wc_pix_sync*/Q}] -to [get_nets -hierarchical {pix_out_cntr*}] 6

# If using the encrypted IP, these CDC false_path constraints are not applied since it is within the encrypted block. ###
# Ignore these timing errors from the FIFO, or use set_clock_groups -asynchronous if there are no other logic 
# outside the IP treating the pixel clock and the byteclock as synchronous.
#set_false_path -to [get_pins -hierarchical genblk*.rp_sync1_r*/DF]
#set_false_path -to [get_pins -hierarchical genblk*.wp_sync1_r*/DF]