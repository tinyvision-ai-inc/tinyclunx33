set architecture "LIFCL"
set device "LIFCL-33U"
set package "FCCSP104"
set speed "7_High-Performance_1.0V"
set WRAPPER_INST "lscc_byte2pixel_inst"
set FAMILY "LIFCL"
set RX_TYPE "CSI-2"
set DSI_MODE "NONBURST_PULSES"
set NUM_RX_LANE 2
set RX_GEAR 8
set BYTE_CLK_FREQ 50.000000
set AXI4_RX "OFF"
set NUM_TX_CH_INPUT 1
set NUM_TX_CH 1
set DT "6'h2B"
set PD_BUS_WIDTH 10
set CTRL_POL "POSITIVE"
set VSA 5
set HSA 8
set SYNC_DELAY 5
set SYNC_DELAY_CNTR_W 3
set PIX_CLK_FREQ 100.000000
set AXI4_TX "OFF"
set THRESHOLD 2
set PIX_FIFO_DEPTH 8
set PIX_FIFO_ADDR_WIDTH 3
set FIFO_IMPL "EBR"
set WORD_CNT 5
set DEBUG_EN 1
set NUM_PIXELS 1
set FRAMES_CNT 1
set LINES_CNT 1


#-------------------------------------------------------------------------------
# CLOCKS
#----- 
# Clock constraints are not automatically propagated from IP-level (*.LDC)
# constraint. Clocks need to be defined at the system level and user must 
# manually add the clock constraints to PDC. 
# Refer to <proj_dir>/<instance_name>/eval/constraint.pdc for sample constraints.


#===============================================================================
# When the encrypted IP is synthesized with SynplifyPro, Radiant cannot apply 
# the constraints from 
# this file. To be able to apply these constraints, refer to the generated 
# post-synthesis constraints (*.pdc) file inside the 
# <proj_dir>/<instance_name>/eval/ folder.
#===============================================================================

#-------------------------------------------------------------------------------
# DATA TYPE CONSTRAINTS
#----- 
#--- multicycle path from wc_pix_sync to pix_out_cntr ---##
# For data types other than RAW12,RAW14 or RAW16
if {($DT != "6'h2C") && ($DT !="6'h2D") && ($DT != "6'h2E") } {
  set_multicycle_path -setup -from [get_nets -hierarchical wc_pix_sync*] -to [get_nets -hierarchical {pixcnt_c* pix_out_cntr*}] 7
  set_multicycle_path -hold  -from [get_nets -hierarchical wc_pix_sync*] -to [get_nets -hierarchical {pixcnt_c* pix_out_cntr*}] 6
}

#-------------------------------------------------------------------------------
# FALSE PATH CONSTRAINTS  
#----- 
set_false_path -through [get_nets {lscc_byte2pixel_inst/dataconvert.lscc_dataconvert/pmi_fifo_dc_inst/u_fifo0/fifo_dc0/_FABRIC.u_fifo/rd_grey_sync_r*}]
set_false_path -through [get_nets {lscc_byte2pixel_inst/dataconvert.lscc_dataconvert/pmi_fifo_dc_inst/u_fifo0/fifo_dc0/_FABRIC.u_fifo/wr_grey_sync_r*}]

if {$RX_TYPE == "CSI-2" && (($DT != "6'h2C") || ($DT != "6'h2D") || ($DT != "6'h2E"))} {
  set_false_path -to [get_nets -hierarchical {lscc_byte2pixel_inst/genblk5.lscc_driver/payload_done_fdbk_meta*}]
  set_false_path -to [get_nets -hierarchical {lscc_byte2pixel_inst/genblk5.lscc_driver/lp_av_fdbk_meta*}]
  set_false_path -to [get_nets -hierarchical {lscc_byte2pixel_inst/genblk5.lscc_driver/fifo_almost_full_meta*}]
  
  set_false_path -from [get_nets -hierarchical lscc_byte2pixel_inst/genblk5.lscc_activevideo/wc_a_r*] -to [get_nets -hierarchical lscc_byte2pixel_inst/genblk5.lscc_activevideo/wc_rd_a_r*]
  set_false_path -from [get_nets -hierarchical lscc_byte2pixel_inst/genblk5.lscc_activevideo/wc_b_r*] -to [get_nets -hierarchical lscc_byte2pixel_inst/genblk5.lscc_activevideo/wc_rd_b_r*]
  set_false_path -to [get_nets -hierarchical lscc_byte2pixel_inst/genblk5.lscc_activevideo/wc_rd_a_r*]
  set_false_path -to [get_nets -hierarchical lscc_byte2pixel_inst/genblk5.lscc_activevideo/wc_rd_b_r*]
  if {$NUM_RX_LANE==4 && $RX_GEAR==16} {
    set_false_path -to [get_nets -hierarchical lscc_byte2pixel_inst/genblk5.lscc_activevideo/wc_rd_c_r*]
    set_false_path -to [get_nets -hierarchical lscc_byte2pixel_inst/genblk5.lscc_activevideo/wc_rd_d_r*]
  }
}

