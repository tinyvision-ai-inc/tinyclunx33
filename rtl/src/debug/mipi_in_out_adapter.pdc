# This constraint set applies to the 2 Lane MIPI in, 2 Lane MIPI out adapter.

# 2L MIPI receive:
ldc_set_location -site {J6} [get_ports mipi_rx_clk_p]
ldc_set_location -site {H6} [get_ports mipi_rx_clk_m]
ldc_set_location -site {G7} [get_ports {mipi_rx_dat_p[1]}]
ldc_set_location -site {G6} [get_ports {mipi_rx_dat_m[1]}]
ldc_set_location -site {F7} [get_ports {mipi_rx_dat_p[0]}]
ldc_set_location -site {E6} [get_ports {mipi_rx_dat_m[0]}]

# 2L MIPI transmit:
ldc_set_location -site {L7} [get_ports mipi_tx_clk_p]
ldc_set_location -site {L6} [get_ports mipi_tx_clk_m]
ldc_set_location -site {N7} [get_ports {mipi_tx_dat_p[1]}]
ldc_set_location -site {N6} [get_ports {mipi_tx_dat_m[1]}]
ldc_set_location -site {M7} [get_ports {mipi_tx_dat_p[0]}]
ldc_set_location -site {M6} [get_ports {mipi_tx_dat_m[0]}]

create_clock -name {clk_pixel_i} -period 12.5 [get_nets pixel_clk]
#create_clock -name {clk_byte_i} -period 20 [get_nets byte_clk*]
#set_clock_groups -group clk_pixel_i -group clk_byte_i -group [get_clocks clk_2] -group [get_clocks tx_clk] -group [get_clocks tx_clk_90] -group [get_clocks clk_60m] -group [get_clocks rvltck] -group [get_clocks lf_clk] -group [get_clocks hf_clk] -group [get_clocks i_pixel_to_mipi/byte_clk_o] -asynchronous

#---- Byte2Pixel constraints --------------------------------------------------------------------------------------#
######                                                                                       ######
# NOTE:  The byte-to-pixel IP treats the byte clock and the pixel clock as asynchronous.          #
#        Use "set_clock_groups -asynchronous" constraint only if the two clocks are asynchronous  #
#        even for other logic outside the byte-to-pixel IP.                                       #
#   set_clock_groups -group [get_clocks clk_byte_i] -group [get_clocks clk_pixel_i] -asynchronous #
######                                                                                       ######
#----TIMING CONSTRAINTS ---------------------------------------------------------------------------#
# 1st stage of a 2-FF CDC register
#  - payload_done_fdbk_meta_*.ff_inst/DF
#  - lp_av_fdbk_meta_*.ff_inst/DF
#  - fifo_almost_full_meta_*.ff_inst/DF
set_false_path -to [get_pins -hierarchical *_meta_reg.ff_inst/DF]
# set_false_path -to [get_pins -hierarchical {*_meta_c.ff_inst/DF}]
# set_false_path -from [get_pins -hierarchical {*/b2p/lscc_byte2pixel_sync/fv_r_c.ff_inst/Q }]                   -to [get_pins -hierarchical {*/b2p/lscc_byte2pixel_sync/fv_meta_c.ff_inst/DF}]
# set_false_path -from [get_pins -hierarchical {*/b2p/dataconvert.lscc_dataconvert/payload_en_done_c.ff_inst/Q}] -to [get_pins -hierarchical {*/b2p/dataconvert.lscc_dataconvert/payload_done_pix_meta_c.ff_inst/DF}]
# set_false_path -from [get_pins -hierarchical {*/b2p/dataconvert.lscc_dataconvert/lp_av_stretch_c.ff_inst/Q}]   -to [get_pins -hierarchical {*/b2p/dataconvert.lscc_dataconvert/active_lp_pix_meta_c.ff_inst/DF}]
set_false_path -to [get_pins -hierarchical */lscc_byte2pixel_inst/genblk*.lscc_activevideo/wc_rd_a_r*.ff_inst/DF]
set_false_path -to [get_pins -hierarchical */lscc_byte2pixel_inst/genblk*.lscc_activevideo/wc_rd_b_r*.ff_inst/DF]
#----uncomment these for 4 RX lane, RX gear16 ----#
#set_false_path -to [get_pins -hierarchical */b2p/genblk*.lscc_activevideo/genblk*.wc_rd_c_r*.ff_inst/DF]
#set_false_path -to [get_pins -hierarchical */b2p/genblk*.lscc_activevideo/genblk*.wc_rd_d_r*.ff_inst/DF]
# multicycle path from wc_pix_sync* to pixcnt_c* and pix_out_cntr* #
set_multicycle_path -setup -from [get_pins -hierarchical wc_pix_sync*.ff_inst/Q] -to [get_pins -hierarchical pix_out_cntr*.ff_inst/DF] 7
set_multicycle_path -hold -from [get_pins -hierarchical wc_pix_sync*.ff_inst/Q] -to [get_pins -hierarchical pix_out_cntr*.ff_inst/DF] 6
### If using the encrypted IP, these CDC false_path constraints are not applied since it is within the encrypted block. ###
###  Ignore these timing errors from the FIFO, or use set_clock_groups -asynchronous if there are no other logic
##   outside the IP treating the pixel clock and the byteclock as synchronous.
set_false_path -to [get_pins -hierarchical *.rp_sync1_r*.ff_inst/DF]
set_false_path -to [get_pins -hierarchical *.wp_sync1_r*.ff_inst/DF]
#--------------------------------------------------------------------------------------------------#
